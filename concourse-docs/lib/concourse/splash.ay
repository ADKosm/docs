use(require("atomy"))

data = require("anatomy/data")
html = require("anatomy/renderers/html")

hl = require("hl")
yaml = hl load("yaml")

base = require("anatomy/base")

def(top-intro(content)):
  data ResolveBlock new(
    [part]:
      part assets << File expand-path("../fonts", __FILE__)

      part css-additions << File expand-path("../css/font-awesome.min.css", __FILE__)
      part css-additions << File expand-path("../css/normalize.css", __FILE__)
      part css-additions << File expand-path("../css/skeleton.css", __FILE__)
      part css-additions << File expand-path("../css/bootstrap-theme.css", __FILE__)
      part css-additions << File expand-path("../css/bootstrap.css", __FILE__)
      part css-additions << File expand-path("../css/main.css", __FILE__)
      part css-additions << File expand-path("../css/fonts.css", __FILE__)

      data Block new(
        [ data Target new("page-top")
          content
        ]
        .class("u-full-width top-intro")))

def(top-intro-nav(link1, link2, link3, link4)):
  data ResolveBlock new(
    [part]:
      part assets << File expand-path("../images/logo_mobile_top.svg", __FILE__)
      part assets << File expand-path("../images/concourse_white.svg", __FILE__)

      data Block new(
        [ data Block new(
            [ data Block new(
                [ data Element new(
                    [ data Element new("Toggle navigation", .class("sr-only"))
                      data Element new("", .class("icon-bar"))
                      data Element new("", .class("icon-bar"))
                      data Element new("", .class("icon-bar"))
                    ]
                    .classed(.button, "navbar-toggle"))
                  data Element new(
                    data Element new("", .image("logo_mobile_top.svg"))
                    .hyperlink("#page-top"))
                ]
                .class("navbar-header", "page-scroll"))
            ]
            .class("container-fluid"))
          data Block new(
            [ data Block new(link1, .classed(.list-item, "navbar-link"))
              data Block new(link2, .classed(.list-item, "navbar-link"))
              data Block new(
                [ data Element new(data Element new("", .image("concourse_white.svg", "174px")), .hyperlink(html url(part)))
                ]
                .classed(.list-item, "home-button"))
              data Block new(link3, .classed(.list-item, "navbar-link"))
              data Block new(link4, .classed(.list-item, "navbar-link"))
            ]
            .classed(.unordered-list, "nav", "navbar-nav"))
        ]
        .class("navbar", "navbar-default", "navbar-static-top")))

def(top-intro-text(content)):
  data Block new(
    data Block new(
      data Block new(
        data Block new(content, .header(1))
        .class("twelve", "columns"))
      .class("row"))
    .class("container", "white-text", "txt-c"))

def(top-intro-buttons(getting-started, contribute)):
  data Block new(
    data Block new(
      data Block new(
        [ getting-started
          data Element new(
            contribute
            .class("contribute-btn"))
        ]
        .class("twelve", "columns"))
      .class("row"))
    .class("container", "white-text", "txt-c"))

def(top-intro-pipes):
  data ResolveBlock new(
    [part]:
      part assets << File expand-path("../images/pipeline-3.png", __FILE__)

      data Block new(
        data Element new("", .classed(.image("pipeline-3.png", "800px"), "pipe-pic", "responsive-image"))
        .class("pipes", "txt-c")))

def(font-awesome(class)):
  data Element new("", .font-awesome(class))

def(button(content)):
  data Element new(content, .class("button", "button-primary", "button-light"))
